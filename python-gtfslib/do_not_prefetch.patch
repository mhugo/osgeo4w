diff --git a/gtfslib/converter.py b/gtfslib/converter.py
index 340e614..f7b0608 100644
--- a/gtfslib/converter.py
+++ b/gtfslib/converter.py
@@ -584,7 +584,7 @@ def _convert_gtfs_model(feed_id, gtfs, dao, lenient=False, disable_normalization
         for shape in dao.shapes(fltr=Shape.feed_id == feed_id, prefetch_points=True, batch_size=50):
             # Shape will be registered in the normalize
             odometer.normalize_and_register_shape(shape)
-            for trip in dao.trips(fltr=(Trip.feed_id == feed_id) & (Trip.shape_id == shape.shape_id), prefetch_stop_times=True, prefetch_stops=True, batch_size=800):
+            for trip in dao.trips(fltr=(Trip.feed_id == feed_id) & (Trip.shape_id == shape.shape_id), prefetch_stop_times=False, prefetch_stops=False, batch_size=800):
                 normalize_trip(trip, odometer)
                 ntrips += 1
                 if ntrips % 1000 == 0:
@@ -593,7 +593,7 @@ def _convert_gtfs_model(feed_id, gtfs, dao, lenient=False, disable_normalization
             nshapes += 1
             #odometer._debug_cache()
         # Process trips w/o shapes
-        for trip in dao.trips(fltr=(Trip.feed_id == feed_id) & (Trip.shape_id == None), prefetch_stop_times=True, prefetch_stops=True, batch_size=800):
+        for trip in dao.trips(fltr=(Trip.feed_id == feed_id) & (Trip.shape_id == None), prefetch_stop_times=False, prefetch_stops=False, batch_size=800):
             odometer.register_noshape()
             normalize_trip(trip, odometer)
             ntrips += 1
